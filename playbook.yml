---
- hosts: all
  become: true
  gather_facts: true
  
  pre_tasks:
  - name: Install yum-utils
    yum:
      name: yum-utils
      state: present

  tasks:
  - name: List updates (yum)
    yum:
      list: updates
      update_cache: true
      security: "{{ security | default(omit, true) }}"
    register: yum_output
    tags:
      - check_update

  - debug:
      msg: >
          System updates: {{ yum_output.results | length }} available.
    when: yum_output.results | length > 0
    tags:
      - check_update
      
  - name: Install updates
    yum:
      name: '*'
      state: latest
      update_cache: true
      security: "{{ security | default(omit, true) }}"
      exclude: "{{ exclude | default(omit, true) }}"
      skip_broken: "{{ skip_broken | default(omit, true) }}"
    ignore_errors: yes
    tags:
      - updates
             
  post_tasks:
  - block:
    - name: Check if reboot is required
    shell: needs-restarting -r
    changed_when: false
    failed_when: reboot_required.rc not in [0,1]
    register: reboot_required
  
  - when: ((reboot_required.rc != 0) and ((need_reboot | bool == true) and (need_reboot is defined))) or ((force_reboot | bool == true) and (force_reboot is defined))
    block:
      - name: Reboot the server
        reboot:
          msg: "Reboot {{ ansible_facts.fqdn }}"
          pre_reboot_delay: 10
          post_reboot_delay: 15 
          connect_timeout: 30
          reboot_timeout: 600
        ignore_errors: true
        changed_when: false
        async: 1
        poll: 0
        register: reboot_result
           
      - name: Reboot time
        debug:
          msg: "The system rebooted in {{ reboot_result.elapsed }} seconds."      
    tags:
      - reboot
  
  - name: Check if check-updates service exists
    stat: path="/usr/lib/systemd/system/check-updates.service"
    register: check_updates_status
    tags:
      - check_update

  - name: Reload systemd service unit for update motd
    systemd:
      name: check-updates.service
      state: started
      masked: no
    when: (check_updates_status.stat.exists == True) and (reboot_result is skipped)
    tags:
      - check_update
